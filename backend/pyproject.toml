[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "web-tutors-backend"
version = "1.0.0"
description = "Web Tutors - Online Learning Platform Backend"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [
    {name = "Web Tutors Team", email = "dev@webtutors.com"},
]
keywords = ["backend", "api", "education", "tutoring", "learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "django>=4.2,<6.0",
    "pandas>=2.0,<3.0",
    "python-dotenv>=1.0,<2.0",
    "django-oauth-toolkit>=2.2,<3.0",
    # "mysqlclient>=2.1,<3.0",
#    "mariadb>=1.1,<2.0",
    "PyMySQL>=1.0,<2.0",
    "drf-spectacular>=0.26,<1.0",
    "djangorestframework>=3.14,<4.0",
    "django-allauth>=0.54,<1.0",
    "faker>=37,<38",
    "factory_boy>=3.2,<4.0",
    "djangorestframework-simplejwt>=5.3,<6.0",
    "rich>=13.0,<14.0",
    "coverage>=7.10.6",
    "pytest-django>=4.11.1",
]

[tool.hatch.build.targets.wheel]
packages = ["src/backend"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "flake8>=6.0",
    "mypy>=1.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/d-backend"
Repository = "https://github.com/yourusername/d-backend"
Issues = "https://github.com/yourusername/d-backend/issues"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["d_backend"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "flake8>=6.0",
    "mypy>=1.0",
]

# Project build and development configuration
[tool.build]
# Build system configuration for Make integration
requires-make = true

[tool.development]
# Development workflow configuration
database = "mariadb"
container-name = "mariadb-backend"
make-targets = [
    "db-start",
    "db-stop", 
    "db-restart",
    "test",
    "lint",
    "format"
]

# Make integration settings
[tool.make]
# Configure Make behavior for this project
default-target = "help"
phony-targets = [
    "help",
    "db-start",
    "db-stop", 
    "db-restart",
    "db-remove",
    "db-status",
    "db-logs",
    "db-connect",
    "db-setup",
    "clean",
    "install",
    "dev-install",
    "test",
    "test-cov",
    "lint",
    "format",
    "check-format",
    "type-check",
    "all-checks",
    "dev-setup",
    "dev-reset",
    "clean-all",
    "docker-ps",
    "docker-images", 
    "docker-clean",
    "run-dev",
    "stop-dev",
    "db-backup",
    "db-restore",
    "info",
    "quick-start",
    "db-seeding"
]
