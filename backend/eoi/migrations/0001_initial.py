# Generated by Django 4.2.23 on 2025-09-11 13:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("units", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TutorSupervisors",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the supervisor was assigned to this tutor",
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        help_text="Supervisor assigned to this tutor",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervised_tutors",
                        to="users.supervisor",
                    ),
                ),
                (
                    "tutor_user",
                    models.ForeignKey(
                        help_text="Tutor user",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tutor_supervisors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tutor Supervisor Assignment",
                "verbose_name_plural": "Tutor Supervisor Assignments",
                "db_table": "tutor_supervisors",
                "ordering": ["-assigned_at"],
                "indexes": [
                    models.Index(
                        fields=["tutor_user", "supervisor"],
                        name="tutor_super_tutor_u_02f402_idx",
                    ),
                    models.Index(
                        fields=["assigned_at"], name="tutor_super_assigne_e8be94_idx"
                    ),
                ],
                "unique_together": {("tutor_user", "supervisor")},
            },
        ),
        migrations.CreateModel(
            name="TutorSkills",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("Beginner", "Beginner"),
                            ("Intermediate", "Intermediate"),
                            ("Advanced", "Advanced"),
                            ("Expert", "Expert"),
                        ],
                        default="Intermediate",
                        help_text="Proficiency level of the tutor in this skill",
                        max_length=20,
                    ),
                ),
                (
                    "verified_at",
                    models.DateTimeField(
                        blank=True, help_text="When this skill was verified", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "skill",
                    models.ForeignKey(
                        help_text="Skill possessed by the tutor",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skill_tutors",
                        to="units.skill",
                    ),
                ),
                (
                    "tutor_user",
                    models.ForeignKey(
                        help_text="Tutor user",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tutor_skills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who verified this skill",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_tutor_skills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tutor Skill",
                "verbose_name_plural": "Tutor Skills",
                "db_table": "tutor_skills",
                "ordering": ["tutor_user__email", "skill__skill_name"],
                "indexes": [
                    models.Index(
                        fields=["tutor_user", "skill"],
                        name="tutor_skill_tutor_u_399aa4_idx",
                    ),
                    models.Index(fields=["level"], name="tutor_skill_level_74fea0_idx"),
                    models.Index(
                        fields=["verified_at"], name="tutor_skill_verifie_2a2968_idx"
                    ),
                ],
                "unique_together": {("tutor_user", "skill")},
            },
        ),
        migrations.CreateModel(
            name="TutorsCourses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the tutor was assigned to this course",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="Course the tutor is assigned to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_tutors",
                        to="units.course",
                    ),
                ),
                (
                    "tutor_user",
                    models.ForeignKey(
                        help_text="Tutor user",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tutor_courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tutor Course Assignment",
                "verbose_name_plural": "Tutor Course Assignments",
                "db_table": "tutors_courses",
                "ordering": ["-assigned_at"],
                "indexes": [
                    models.Index(
                        fields=["tutor_user", "course"],
                        name="tutors_cour_tutor_u_08acac_idx",
                    ),
                    models.Index(
                        fields=["assigned_at"], name="tutors_cour_assigne_36fc05_idx"
                    ),
                ],
                "unique_together": {("tutor_user", "course")},
            },
        ),
        migrations.CreateModel(
            name="MasterEoI",
            fields=[
                ("scd_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "master_eoi_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Stable business identifier across versions",
                    ),
                ),
                (
                    "intake_term",
                    models.CharField(
                        blank=True,
                        help_text="Academic term (e.g., 2025S1, 2025S2)",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Planned", "Planned"),
                            ("Open", "Open"),
                            ("Closed", "Closed"),
                            ("Archived", "Archived"),
                        ],
                        default="Planned",
                        help_text="Current status of the EOI campaign",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about this EOI campaign"
                    ),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Start of validity period (inclusive)",
                    ),
                ),
                (
                    "valid_to",
                    models.DateTimeField(
                        blank=True,
                        help_text="End of validity period (exclusive); null when current",
                        null=True,
                    ),
                ),
                (
                    "is_current",
                    models.BooleanField(
                        default=True, help_text="True if this is the current version"
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Version number of this record",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campus",
                    models.ForeignKey(
                        blank=True,
                        help_text="Campus for this EOI campaign",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="master_eois",
                        to="users.campus",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        help_text="Course this EOI campaign is for",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="master_eois",
                        to="units.course",
                    ),
                ),
                (
                    "owner_user",
                    models.ForeignKey(
                        help_text="User who owns/manages this EOI campaign",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_master_eois",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Master EOI",
                "verbose_name_plural": "Master EOIs",
                "db_table": "master_eoi",
                "ordering": ["-created_at", "-version"],
                "indexes": [
                    models.Index(
                        fields=["master_eoi_id", "is_current"],
                        name="master_eoi_master__dbb368_idx",
                    ),
                    models.Index(
                        fields=["master_eoi_id", "valid_from"],
                        name="master_eoi_master__39d3a1_idx",
                    ),
                    models.Index(
                        fields=["status"], name="master_eoi_status_9b6b5c_idx"
                    ),
                    models.Index(
                        fields=["intake_term"], name="master_eoi_intake__ef08d1_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EoiApp",
            fields=[
                ("scd_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "eoi_app_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Stable business identifier across versions",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Submitted", "Submitted"),
                            ("Reviewed", "Reviewed"),
                            ("Accepted", "Accepted"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Submitted",
                        help_text="Current status of the application",
                        max_length=20,
                    ),
                ),
                (
                    "remarks",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes or comments about the application",
                    ),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Start of validity period (inclusive)",
                    ),
                ),
                (
                    "valid_to",
                    models.DateTimeField(
                        blank=True,
                        help_text="End of validity period (exclusive); null when current",
                        null=True,
                    ),
                ),
                (
                    "is_current",
                    models.BooleanField(
                        default=True, help_text="True if this is the current version"
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Version number of this record",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "applicant_user",
                    models.ForeignKey(
                        help_text="User applying for the tutoring position",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eoi_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "campus",
                    models.ForeignKey(
                        blank=True,
                        help_text="Campus where tutoring will take place",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="eoi_applications",
                        to="users.campus",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        blank=True,
                        help_text="Unit being applied for",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="eoi_applications",
                        to="units.unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "EOI Application",
                "verbose_name_plural": "EOI Applications",
                "db_table": "eoi_app",
                "ordering": ["-created_at", "-version"],
                "indexes": [
                    models.Index(
                        fields=["eoi_app_id", "is_current"],
                        name="eoi_app_eoi_app_195d75_idx",
                    ),
                    models.Index(
                        fields=["eoi_app_id", "valid_from"],
                        name="eoi_app_eoi_app_c90029_idx",
                    ),
                    models.Index(fields=["status"], name="eoi_app_status_04307e_idx"),
                    models.Index(
                        fields=["valid_from", "valid_to"],
                        name="eoi_app_valid_f_b29ec1_idx",
                    ),
                ],
            },
        ),
    ]
