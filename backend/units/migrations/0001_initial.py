# Generated by Django 4.2.23 on 2025-09-11 13:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                ("course_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "course_code",
                    models.CharField(
                        help_text="Unique course code (e.g., BSC-DS)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "course_name",
                    models.CharField(
                        help_text="Full name of the course", max_length=255
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campus",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary campus for this course (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_courses",
                        to="users.campus",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
                "db_table": "courses",
                "ordering": ["course_code"],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                ("skill_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "skill_name",
                    models.CharField(
                        help_text="Unique name of the skill",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the skill"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Skill",
                "verbose_name_plural": "Skills",
                "db_table": "skills",
                "ordering": ["skill_name"],
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                ("unit_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "unit_code",
                    models.CharField(
                        help_text="Unique unit code (e.g., MATH101)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "unit_name",
                    models.CharField(help_text="Full name of the unit", max_length=255),
                ),
                (
                    "credits",
                    models.PositiveIntegerField(
                        help_text="Number of credit points for this unit",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Unit",
                "verbose_name_plural": "Units",
                "db_table": "units",
                "ordering": ["unit_code"],
            },
        ),
        migrations.CreateModel(
            name="UnitSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proficiency_level",
                    models.CharField(
                        choices=[
                            ("Beginner", "Beginner"),
                            ("Intermediate", "Intermediate"),
                            ("Advanced", "Advanced"),
                            ("Expert", "Expert"),
                        ],
                        default="Intermediate",
                        help_text="Required or taught proficiency level",
                        max_length=20,
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this skill is required for the unit",
                    ),
                ),
                (
                    "is_taught",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this skill is taught in the unit",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skill_units",
                        to="units.skill",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unit_skills",
                        to="units.unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Unit Skill",
                "verbose_name_plural": "Unit Skills",
                "db_table": "unit_skills",
                "ordering": ["unit__unit_code", "skill__skill_name"],
                "unique_together": {("unit", "skill")},
            },
        ),
        migrations.CreateModel(
            name="UnitCourse",
            fields=[
                ("unit_course_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "term",
                    models.CharField(
                        blank=True,
                        help_text="Academic term (e.g., 2025S1, 2025S2)",
                        max_length=20,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Academic year",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(2020)],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Inactive", "Inactive")],
                        default="Active",
                        help_text="Current status of this unit-course relationship",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campus",
                    models.ForeignKey(
                        blank=True,
                        help_text="Campus where this unit is delivered (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="unit_offerings",
                        to="users.campus",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        help_text="The course this unit belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_units",
                        to="units.course",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        help_text="The unit being offered",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="unit_courses",
                        to="units.unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Unit Course",
                "verbose_name_plural": "Unit Courses",
                "db_table": "unit_courses",
                "ordering": ["year", "term", "unit__unit_code"],
                "indexes": [
                    models.Index(
                        fields=["unit"], name="unit_course_unit_id_2c770f_idx"
                    ),
                    models.Index(
                        fields=["course"], name="unit_course_course__9c6a4e_idx"
                    ),
                    models.Index(
                        fields=["year", "term"], name="unit_course_year_2f7aa6_idx"
                    ),
                    models.Index(
                        fields=["status"], name="unit_course_status_078d63_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="unitcourse",
            constraint=models.UniqueConstraint(
                fields=("unit", "course", "term", "year", "campus"),
                name="unique_unit_course_term_year_campus",
            ),
        ),
    ]
